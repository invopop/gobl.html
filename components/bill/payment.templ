package bill

import (
	"github.com/invopop/gobl"
	"github.com/invopop/gobl.html/components/regimes/pt"
	"github.com/invopop/gobl.html/components/t"
	"github.com/invopop/gobl.html/components/utils"
	"github.com/invopop/gobl/bill"
	"github.com/invopop/gobl/tax"
)

// Payment renders a complete GOBL bill.Payment object.
templ Payment(env *gobl.Envelope, pmt *bill.Payment) {
	{{ tt := mergePaymentTaxTotals(pmt) }}
	@t.Scope("billing.payment") {
		<article class="payment">
			<header class="regular">
				@paymentHeader(env, pmt)
			</header>
			@paymentLines(pmt, tt)
			<div class="totals">
				@paymentTotals(pmt, tt)
				@taxes(pmt.RegimeDef(), tt)
			</div>
			@method(pmt)
			@notes(pmt.Notes, pmt.Supplier)
			<div class="extensions">
				// Region specific information
				@pt.ATQR(env)
			</div>
		</article>
	}
}

templ paymentHeader(env *gobl.Envelope, pmt *bill.Payment) {
	<div class="details">
		@paymentTitle(env, pmt)
		@paymentSummary(pmt)
	</div>
	<div class="contacts">
		@contact(pmt.Supplier, "supplier")
		@contact(pmt.Customer, "customer")
	</div>
}

templ paymentTitle(env *gobl.Envelope, pmt *bill.Payment) {
	@t.Scope(".title") {
		<section class="title">
			@titleHero(pmt.Supplier)
			@paymentTitleType(pmt)
			<h2 class="code">
				@titleCode(pmt.Series, pmt.Code, pmt.Regime)
				@titleBadges(env, pmt)
			</h2>
		</section>
	}
}

templ paymentTitleType(pmt *bill.Payment) {
	<h1 class="type">
		@utils.Coalesce(
			pt.PaymentTitleType(pmt),
			defaultTitleType(pmt.Type),
		)
	</h1>
}

templ paymentTotals(pmt *bill.Payment, tt *tax.Total) {
	<section class="totals">
		@t.Scope(".totals") {
			<h2>
				@t.T(".title")
			</h2>
			<table>
				<tbody>
					if tt != nil {
						<tr class="tax">
							<th>
								@t.T(".taxes")
							</th>
							<td>
								@t.LM(tt.Sum)
							</td>
						</tr>
					}
					<tr class="total strong">
						<th>
							@t.T(".total")
						</th>
						<td>
							@t.LM(pmt.Total)
						</td>
					</tr>
				</tbody>
			</table>
		}
	</section>
}

templ method(pmt *bill.Payment) {
	@t.Scope(".method") {
		<section class="payment">
			<h2 class="title">
				@t.T(".title")
			</h2>
			@paymentInstructions(pmt.Method)
		</section>
	}
}

func mergePaymentTaxTotals(pmt *bill.Payment) *tax.Total {
	var tt *tax.Total
	for _, pl := range pmt.Lines {
		if pl.Tax == nil {
			continue
		}
		if tt == nil {
			tt = pl.Tax
		} else {
			tt = tt.Merge(pl.Tax)
		}
	}
	return tt
}
