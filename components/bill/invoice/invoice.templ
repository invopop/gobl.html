package invoice

import (
	"context"
	"fmt"

	"github.com/invopop/gobl"
	"github.com/invopop/gobl.html/components/regimes/co"
	"github.com/invopop/gobl.html/components/regimes/es"
	"github.com/invopop/gobl.html/components/regimes/gr"
	"github.com/invopop/gobl.html/components/regimes/mx"
	"github.com/invopop/gobl.html/components/regimes/pl"
	"github.com/invopop/gobl.html/components/regimes/pt"
	"github.com/invopop/gobl.html/components/t"
	"github.com/invopop/gobl.html/internal"
	"github.com/invopop/gobl/bill"
	"github.com/invopop/gobl/cbc"
	"github.com/invopop/gobl/org"
	"github.com/invopop/gobl/tax"
)

// Invoice renders a complete GOBL bill.Invoice object.
templ Invoice(env *gobl.Envelope, inv *bill.Invoice) {
	// Footer needs to be at the top to show on all pages
	<article class={ templ.KV("invoice", true), templ.KV("din5008", applyDIN5008(ctx)) }>
		<header class={ templ.KV("qr", HasHeaderQR(env)), templ.KV("not-qr", !HasHeaderQR(env)) }>
			if applyDIN5008(ctx) {
				@din5008Header(inv)
			} else {
				@defaultHeader(env, inv)
			}
		</header>
		@lines(inv)
		<div class="totals">
			@totals(inv, inv.Totals)
			@taxes(inv, inv.Totals.Taxes)
		</div>
		@payment(inv)
		@notes(inv)
		<div class="extensions">
			// Region specific information
			@co.DIANQR(env, inv)
			@mx.CFDI(env, inv)
			@pl.KSeFQR(env)
			@pt.ATQR(env)
			@gr.IAPR(env)
		</div>
	</article>
}

templ title(inv *bill.Invoice) {
	@t.Scope("billing.invoice.title") {
		<section class="title">
			<div class="hero">
				if img := supplierLogo(ctx, inv); img != nil {
					<img src={ img.URL } alt={ img.Label } height={ logoHeight(img) }/>
				} else {
					<div class="alias">
						{ supplierAlias(inv) }
					</div>
				}
			</div>
			<h1 class="type">
				@t.T("." + i18nTitleTag(inv))
			</h1>
			<h2 class="code">
				{ code(inv.Series, inv.Code) }
				if paid(inv) {
					<span class="paid">
						@t.T(".paid")
					</span>
				}
			</h2>
		</section>
	}
}

templ defaultHeader(env *gobl.Envelope, inv *bill.Invoice) {
	<div class="details">
		@title(inv)
		@summary(inv)
	</div>
	// Spanish QRs
	@es.VerifactuQR(env)
	@es.TicketBAIQR(env)
	<div class="contacts">
		@supplier(inv)
		if inv.Customer != nil {
			@customer(inv)
		}
	</div>
}

templ din5008Header(inv *bill.Invoice) {
	<div>
		@title(inv)
		if inv.Customer != nil {
			@customer(inv)
		}
	</div>
	<div>
		@summary(inv)
		@supplier(inv)
	</div>
}

func i18nTitleTag(inv *bill.Invoice) string {
	typ := string(inv.Type)
	if inv.HasTags(tax.TagSimplified) && inv.Type == bill.InvoiceTypeStandard {
		typ = typ + "-simplified"
	}
	return typ
}

func supplierAlias(inv *bill.Invoice) string {
	if inv.Supplier.Alias != "" {
		return inv.Supplier.Alias
	}
	return inv.Supplier.Name
}

func supplierLogo(ctx context.Context, inv *bill.Invoice) *org.Image {
	opts := internal.Options(ctx)
	if opts.Logo != nil {
		return opts.Logo
	}
	if len(inv.Supplier.Logos) > 0 {
		return inv.Supplier.Logos[0]
	}
	return nil
}

func logoHeight(img *org.Image) string {
	if img.Height != 0 {
		return fmt.Sprint(img.Height)
	}
	return "40" // pixels
}

func code(series, code cbc.Code) string {
	if series == "" {
		return code.String()
	}
	return fmt.Sprintf("%s-%s", series, code)
}

func applyDIN5008(ctx context.Context) bool {
	opts := internal.Options(ctx)

	return opts.DIN5008
}
