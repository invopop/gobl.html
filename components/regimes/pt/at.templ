package pt

import (
	"github.com/invopop/gobl"
	"github.com/invopop/gobl.html/components/t"
	"github.com/invopop/gobl.html/internal/doc"
	"github.com/invopop/gobl/addons/pt/saft"
	"github.com/invopop/gobl/cbc"
)

templ ATQR(env *gobl.Envelope) {
	if atcud := atATCUD(env); atcud != "" {
		if qr := atQR(env); qr != "" {
			@generateATQR(atcud, qr)
		}
	}
}

templ TitleType(doc doc.Document) {
	if isPortuguese(doc) {
		@titleType(doc)
	}
}

templ JoinCode(doc doc.Document, series, code cbc.Code) {
	if isPortuguese(doc) {
		{ series.JoinWith("/", code).String() }
	}
}

templ TitleBadges(doc doc.Document) {
	if isPortuguese(doc) {
		<span class="badge">
			@t.T("regimes.pt.title.original")
		</span>
	}
}

templ generateATQR(atcud, qr string) {
	<style type="text/css">
		.at {
			break-inside: avoid;
			text-align: right;
			/* width: 6cm; */
		}
		.at .label {
			font-family: monospace;
			font-size: 7pt;
			text-align: right;
			margin-bottom: 2mm;
		}
		.at img {
			width: 30mm;
			height: 30mm;
		}
		.mp-footer .at .qr {
			display: none;
		}
		.mp-footer .at{
			margin-top: 5mm;
			margin-bottom: -5mm;
		}
	</style>
	<section class="pt">
		<div class="at">
			<div class="label">
				ATCUD: { atcud }
			</div>
			<div class="qr">
				<img src={ generateQR(qr) }/>
			</div>
		</div>
	</section>
}

templ titleType(doc doc.Document) {
	if typ := docType(doc); typ != cbc.CodeEmpty {
		@t.T("regimes.pt.title." + string(typ))
	}
}

func docType(doc doc.Document) cbc.Code {
	ext := doc.GetExt()
	switch {
	case ext.Has(saft.ExtKeyInvoiceType):
		return ext.Get(saft.ExtKeyInvoiceType)
	case ext.Has(saft.ExtKeyWorkType):
		return ext.Get(saft.ExtKeyWorkType)
	case ext.Has(saft.ExtKeyMovementType):
		return ext.Get(saft.ExtKeyMovementType)
	case ext.Has(saft.ExtKeyPaymentType):
		return ext.Get(saft.ExtKeyPaymentType)
	default:
		return cbc.CodeEmpty
	}
}

func isPortuguese(doc doc.Document) bool {
	return doc != nil && doc.GetRegime().Country == country
}
