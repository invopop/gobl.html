package components

import (
	"context"

	"github.com/invopop/gobl"
	"github.com/invopop/gobl.html/components/assets"
	"github.com/invopop/gobl.html/components/bill"
	"github.com/invopop/gobl.html/components/note"
	"github.com/invopop/gobl.html/components/org"
	"github.com/invopop/gobl.html/components/regimes/pt"
	"github.com/invopop/gobl.html/internal"
	"github.com/invopop/gobl.html/layout"
	gbill "github.com/invopop/gobl/bill"
	gnote "github.com/invopop/gobl/note"
	gorg "github.com/invopop/gobl/org"
)

templ Envelope(env *gobl.Envelope) {
	<html data-theme="light">
		<head>
			<title>GOBL HTML Generator</title>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="preconnect" href="https://fonts.googleapis.com"/>
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
			<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet"/>
			@assets.Stylesheet("envelope.css")
			@assets.Stylesheet("invoice.css")
			@pt.Stylesheets(env)
		</head>
		<body
			if applyLetterLayout(ctx) {
				class="letter"
			}
		>
			<article class="envelope">
				// footer required at start to appear on all pages
				@footerPrint(env)
				switch doc := env.Extract().(type) {
					case *gbill.Invoice:
						@bill.Invoice(env, doc)
					case *gbill.Payment:
						@bill.Payment(env, doc)
					case *gbill.Delivery:
						@bill.Delivery(env, doc)
					case *gbill.Order:
						@bill.Order(env, doc)
					case *gnote.Message:
						@note.Message(doc)
					case *gorg.Party:
						@org.Party(doc)
					default:
						<p>Unknown document type</p>
				}
				@footerScreen(env)
			</article>
		</body>
	</html>
}

// applyLetterLayout returns true if the options Layout is set to Letter
func applyLetterLayout(ctx context.Context) bool {
	opts := internal.Options(ctx)

	return opts.Layout == layout.Letter
}
